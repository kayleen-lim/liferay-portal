@component-name = "portal-commerce"
definition {

	property osgi.app.includes = "commerce";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		Portlet.shutdownServer();

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "deploy-commerce-license-li");

		Portlet.startServer(deleteLiferayHome = "false");

		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Pause(locator1 = "5000");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();

			User.logoutPG();
		}
	}

	test EditOrder {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CPCommerceOrders#EditOrder";

		CommerceAccelerators.initializeAccelerator(siteName = "Minium");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Channels");

		CommerceNavigator.gotoEntry(entryName = "Minium Portal");

		CommerceChannels.activatePaymentMethod(paymentMethod = "Money Order");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Commerce Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		CommerceAcceleratorsInitializer.changeProductsSorting(sortingType = "Name Ascending");

		FrontStore.addInitializerProductToCart(
			productName = "ABS Sensor",
			productQuantity = "2");

		Refresh();

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "Submit");

		Pause(locator1 = "3000");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "ABS Sensor",
			productQuantity = "2",
			productUnitPrice = "50",
			shippingMethod = "Standard");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Orders");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Pending");

		ClickNoError(locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		CommerceEntry.clickNoError(menuItem = "Edit");

		CommerceOrders.editOrderItemDetails(
			orderItemQuantity = "4",
			orderItemSKU = "MIN93015");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Orders");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Pending");

		ClickNoError(locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		CommerceEntry.clickNoError(menuItem = "Edit");

		CommerceOrders.viewOrdersEntry(
			addressAddress = "Test Address",
			addressCity = "Test City",
			addressZipCode = "Test Zip Code",
			paymentMethod = "Money Order",
			productName = "ABS Sensor",
			productPrice = "100.00",
			productQuantity = "4",
			productSKU = "MIN93015",
			productUnitPrice = "50.00");
	}

}